// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 17.1.0 Build 590 10/25/2017 SJ Lite Edition"

// DATE "10/05/2023 09:37:41"

// 
// Device: Altera EP4CE115F29C7 Package FBGA780
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module TransBinCPT (
	NB_Face,
	Min,
	Max);
input 	[6:0] NB_Face;
output 	[6:0] Min;
output 	[6:0] Max;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \Min[0]~output_o ;
wire \Min[1]~output_o ;
wire \Min[2]~output_o ;
wire \Min[3]~output_o ;
wire \Min[4]~output_o ;
wire \Min[5]~output_o ;
wire \Min[6]~output_o ;
wire \Max[0]~output_o ;
wire \Max[1]~output_o ;
wire \Max[2]~output_o ;
wire \Max[3]~output_o ;
wire \Max[4]~output_o ;
wire \Max[5]~output_o ;
wire \Max[6]~output_o ;
wire \NB_Face[1]~input_o ;
wire \NB_Face[3]~input_o ;
wire \NB_Face[5]~input_o ;
wire \NB_Face[6]~input_o ;
wire \Max[3]~9_combout ;
wire \NB_Face[0]~input_o ;
wire \NB_Face[4]~input_o ;
wire \NB_Face[2]~input_o ;
wire \Equal0~0_combout ;
wire \Equal1~0_combout ;
wire \Equal1~1_combout ;
wire \always0~0_combout ;
wire \Max[1]~4_combout ;
wire \Max[1]~14_combout ;
wire \Max[2]~10_combout ;
wire \WideOr0~0_combout ;
wire \Max[3]~11_combout ;
wire \Max~12_combout ;
wire \Max~13_combout ;


cycloneive_io_obuf \Min[0]~output (
	.i(!\always0~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Min[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \Min[0]~output .bus_hold = "false";
defparam \Min[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \Min[1]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Min[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \Min[1]~output .bus_hold = "false";
defparam \Min[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \Min[2]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Min[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \Min[2]~output .bus_hold = "false";
defparam \Min[2]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \Min[3]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Min[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \Min[3]~output .bus_hold = "false";
defparam \Min[3]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \Min[4]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Min[4]~output_o ),
	.obar());
// synopsys translate_off
defparam \Min[4]~output .bus_hold = "false";
defparam \Min[4]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \Min[5]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Min[5]~output_o ),
	.obar());
// synopsys translate_off
defparam \Min[5]~output .bus_hold = "false";
defparam \Min[5]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \Min[6]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Min[6]~output_o ),
	.obar());
// synopsys translate_off
defparam \Min[6]~output .bus_hold = "false";
defparam \Min[6]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \Max[0]~output (
	.i(\always0~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Max[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \Max[0]~output .bus_hold = "false";
defparam \Max[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \Max[1]~output (
	.i(\Max[1]~14_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Max[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \Max[1]~output .bus_hold = "false";
defparam \Max[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \Max[2]~output (
	.i(\Max[2]~10_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Max[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \Max[2]~output .bus_hold = "false";
defparam \Max[2]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \Max[3]~output (
	.i(\Max[3]~11_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Max[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \Max[3]~output .bus_hold = "false";
defparam \Max[3]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \Max[4]~output (
	.i(\Max~13_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Max[4]~output_o ),
	.obar());
// synopsys translate_off
defparam \Max[4]~output .bus_hold = "false";
defparam \Max[4]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \Max[5]~output (
	.i(!\Equal1~1_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Max[5]~output_o ),
	.obar());
// synopsys translate_off
defparam \Max[5]~output .bus_hold = "false";
defparam \Max[5]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \Max[6]~output (
	.i(!\Equal1~1_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Max[6]~output_o ),
	.obar());
// synopsys translate_off
defparam \Max[6]~output .bus_hold = "false";
defparam \Max[6]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_ibuf \NB_Face[1]~input (
	.i(NB_Face[1]),
	.ibar(gnd),
	.o(\NB_Face[1]~input_o ));
// synopsys translate_off
defparam \NB_Face[1]~input .bus_hold = "false";
defparam \NB_Face[1]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \NB_Face[3]~input (
	.i(NB_Face[3]),
	.ibar(gnd),
	.o(\NB_Face[3]~input_o ));
// synopsys translate_off
defparam \NB_Face[3]~input .bus_hold = "false";
defparam \NB_Face[3]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \NB_Face[5]~input (
	.i(NB_Face[5]),
	.ibar(gnd),
	.o(\NB_Face[5]~input_o ));
// synopsys translate_off
defparam \NB_Face[5]~input .bus_hold = "false";
defparam \NB_Face[5]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \NB_Face[6]~input (
	.i(NB_Face[6]),
	.ibar(gnd),
	.o(\NB_Face[6]~input_o ));
// synopsys translate_off
defparam \NB_Face[6]~input .bus_hold = "false";
defparam \NB_Face[6]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \Max[3]~9 (
// Equation(s):
// \Max[3]~9_combout  = (\NB_Face[3]~input_o  & (!\NB_Face[5]~input_o  & !\NB_Face[6]~input_o ))

	.dataa(\NB_Face[3]~input_o ),
	.datab(gnd),
	.datac(\NB_Face[5]~input_o ),
	.datad(\NB_Face[6]~input_o ),
	.cin(gnd),
	.combout(\Max[3]~9_combout ),
	.cout());
// synopsys translate_off
defparam \Max[3]~9 .lut_mask = 16'h000A;
defparam \Max[3]~9 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_io_ibuf \NB_Face[0]~input (
	.i(NB_Face[0]),
	.ibar(gnd),
	.o(\NB_Face[0]~input_o ));
// synopsys translate_off
defparam \NB_Face[0]~input .bus_hold = "false";
defparam \NB_Face[0]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \NB_Face[4]~input (
	.i(NB_Face[4]),
	.ibar(gnd),
	.o(\NB_Face[4]~input_o ));
// synopsys translate_off
defparam \NB_Face[4]~input .bus_hold = "false";
defparam \NB_Face[4]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \NB_Face[2]~input (
	.i(NB_Face[2]),
	.ibar(gnd),
	.o(\NB_Face[2]~input_o ));
// synopsys translate_off
defparam \NB_Face[2]~input .bus_hold = "false";
defparam \NB_Face[2]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \Equal0~0 (
// Equation(s):
// \Equal0~0_combout  = (\Max[3]~9_combout  & (!\NB_Face[0]~input_o  & (!\NB_Face[4]~input_o  & !\NB_Face[2]~input_o )))

	.dataa(\Max[3]~9_combout ),
	.datab(\NB_Face[0]~input_o ),
	.datac(\NB_Face[4]~input_o ),
	.datad(\NB_Face[2]~input_o ),
	.cin(gnd),
	.combout(\Equal0~0_combout ),
	.cout());
// synopsys translate_off
defparam \Equal0~0 .lut_mask = 16'h0002;
defparam \Equal0~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \Equal1~0 (
// Equation(s):
// \Equal1~0_combout  = (\NB_Face[1]~input_o ) # ((\NB_Face[0]~input_o ) # ((\NB_Face[4]~input_o ) # (!\NB_Face[2]~input_o )))

	.dataa(\NB_Face[1]~input_o ),
	.datab(\NB_Face[0]~input_o ),
	.datac(\NB_Face[4]~input_o ),
	.datad(\NB_Face[2]~input_o ),
	.cin(gnd),
	.combout(\Equal1~0_combout ),
	.cout());
// synopsys translate_off
defparam \Equal1~0 .lut_mask = 16'hFEFF;
defparam \Equal1~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \Equal1~1 (
// Equation(s):
// \Equal1~1_combout  = (\NB_Face[3]~input_o ) # ((\Equal1~0_combout ) # ((!\NB_Face[6]~input_o ) # (!\NB_Face[5]~input_o )))

	.dataa(\NB_Face[3]~input_o ),
	.datab(\Equal1~0_combout ),
	.datac(\NB_Face[5]~input_o ),
	.datad(\NB_Face[6]~input_o ),
	.cin(gnd),
	.combout(\Equal1~1_combout ),
	.cout());
// synopsys translate_off
defparam \Equal1~1 .lut_mask = 16'hEFFF;
defparam \Equal1~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \always0~0 (
// Equation(s):
// \always0~0_combout  = ((\NB_Face[1]~input_o  & \Equal0~0_combout )) # (!\Equal1~1_combout )

	.dataa(\NB_Face[1]~input_o ),
	.datab(\Equal0~0_combout ),
	.datac(gnd),
	.datad(\Equal1~1_combout ),
	.cin(gnd),
	.combout(\always0~0_combout ),
	.cout());
// synopsys translate_off
defparam \always0~0 .lut_mask = 16'h88FF;
defparam \always0~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \Max[1]~4 (
// Equation(s):
// \Max[1]~4_combout  = (\NB_Face[2]~input_o  & ((\NB_Face[1]~input_o ) # ((\NB_Face[4]~input_o  & \NB_Face[3]~input_o )))) # (!\NB_Face[2]~input_o  & (((\NB_Face[4]~input_o ) # (!\NB_Face[3]~input_o ))))

	.dataa(\NB_Face[1]~input_o ),
	.datab(\NB_Face[4]~input_o ),
	.datac(\NB_Face[2]~input_o ),
	.datad(\NB_Face[3]~input_o ),
	.cin(gnd),
	.combout(\Max[1]~4_combout ),
	.cout());
// synopsys translate_off
defparam \Max[1]~4 .lut_mask = 16'hECAF;
defparam \Max[1]~4 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \Max[1]~14 (
// Equation(s):
// \Max[1]~14_combout  = (\Max[1]~4_combout ) # ((\NB_Face[0]~input_o ) # ((\NB_Face[6]~input_o ) # (\NB_Face[5]~input_o )))

	.dataa(\Max[1]~4_combout ),
	.datab(\NB_Face[0]~input_o ),
	.datac(\NB_Face[6]~input_o ),
	.datad(\NB_Face[5]~input_o ),
	.cin(gnd),
	.combout(\Max[1]~14_combout ),
	.cout());
// synopsys translate_off
defparam \Max[1]~14 .lut_mask = 16'hFFFE;
defparam \Max[1]~14 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \Max[2]~10 (
// Equation(s):
// \Max[2]~10_combout  = (\Equal1~1_combout  & !\Equal0~0_combout )

	.dataa(\Equal1~1_combout ),
	.datab(gnd),
	.datac(gnd),
	.datad(\Equal0~0_combout ),
	.cin(gnd),
	.combout(\Max[2]~10_combout ),
	.cout());
// synopsys translate_off
defparam \Max[2]~10 .lut_mask = 16'h00AA;
defparam \Max[2]~10 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \WideOr0~0 (
// Equation(s):
// \WideOr0~0_combout  = (\NB_Face[0]~input_o ) # ((\NB_Face[1]~input_o  & ((!\NB_Face[4]~input_o ) # (!\NB_Face[2]~input_o ))) # (!\NB_Face[1]~input_o  & ((\NB_Face[4]~input_o ))))

	.dataa(\NB_Face[0]~input_o ),
	.datab(\NB_Face[1]~input_o ),
	.datac(\NB_Face[2]~input_o ),
	.datad(\NB_Face[4]~input_o ),
	.cin(gnd),
	.combout(\WideOr0~0_combout ),
	.cout());
// synopsys translate_off
defparam \WideOr0~0 .lut_mask = 16'hBFEE;
defparam \WideOr0~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \Max[3]~11 (
// Equation(s):
// \Max[3]~11_combout  = (\always0~0_combout  & (\Equal1~1_combout )) # (!\always0~0_combout  & (((\Max[3]~9_combout  & !\WideOr0~0_combout ))))

	.dataa(\Equal1~1_combout ),
	.datab(\always0~0_combout ),
	.datac(\Max[3]~9_combout ),
	.datad(\WideOr0~0_combout ),
	.cin(gnd),
	.combout(\Max[3]~11_combout ),
	.cout());
// synopsys translate_off
defparam \Max[3]~11 .lut_mask = 16'h88B8;
defparam \Max[3]~11 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \Max~12 (
// Equation(s):
// \Max~12_combout  = (!\NB_Face[0]~input_o  & (\NB_Face[2]~input_o  & (\NB_Face[1]~input_o  $ (!\NB_Face[3]~input_o ))))

	.dataa(\NB_Face[0]~input_o ),
	.datab(\NB_Face[1]~input_o ),
	.datac(\NB_Face[2]~input_o ),
	.datad(\NB_Face[3]~input_o ),
	.cin(gnd),
	.combout(\Max~12_combout ),
	.cout());
// synopsys translate_off
defparam \Max~12 .lut_mask = 16'h4010;
defparam \Max~12 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \Max~13 (
// Equation(s):
// \Max~13_combout  = (\NB_Face[4]~input_o  & (\Max~12_combout  & (!\NB_Face[5]~input_o  & !\NB_Face[6]~input_o )))

	.dataa(\NB_Face[4]~input_o ),
	.datab(\Max~12_combout ),
	.datac(\NB_Face[5]~input_o ),
	.datad(\NB_Face[6]~input_o ),
	.cin(gnd),
	.combout(\Max~13_combout ),
	.cout());
// synopsys translate_off
defparam \Max~13 .lut_mask = 16'h0008;
defparam \Max~13 .sum_lutc_input = "datac";
// synopsys translate_on

assign Min[0] = \Min[0]~output_o ;

assign Min[1] = \Min[1]~output_o ;

assign Min[2] = \Min[2]~output_o ;

assign Min[3] = \Min[3]~output_o ;

assign Min[4] = \Min[4]~output_o ;

assign Min[5] = \Min[5]~output_o ;

assign Min[6] = \Min[6]~output_o ;

assign Max[0] = \Max[0]~output_o ;

assign Max[1] = \Max[1]~output_o ;

assign Max[2] = \Max[2]~output_o ;

assign Max[3] = \Max[3]~output_o ;

assign Max[4] = \Max[4]~output_o ;

assign Max[5] = \Max[5]~output_o ;

assign Max[6] = \Max[6]~output_o ;

endmodule
