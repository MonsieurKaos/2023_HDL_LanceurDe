// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 17.1.0 Build 590 10/25/2017 SJ Lite Edition"

// DATE "10/05/2023 10:47:34"

// 
// Device: Altera EP4CE115F29C7 Package FBGA780
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module CPTAleat (
	Clk,
	Min,
	Max,
	CMP);
input 	Clk;
input 	[6:0] Min;
input 	[6:0] Max;
output 	[6:0] CMP;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \CMP[0]~output_o ;
wire \CMP[1]~output_o ;
wire \CMP[2]~output_o ;
wire \CMP[3]~output_o ;
wire \CMP[4]~output_o ;
wire \CMP[5]~output_o ;
wire \CMP[6]~output_o ;
wire \Clk~input_o ;
wire \CMP[0]~7_combout ;
wire \Min[0]~input_o ;
wire \Max[6]~input_o ;
wire \Max[5]~input_o ;
wire \Max[4]~input_o ;
wire \Max[3]~input_o ;
wire \Max[2]~input_o ;
wire \Max[1]~input_o ;
wire \Max[0]~input_o ;
wire \Add1~1 ;
wire \Add1~3 ;
wire \Add1~5 ;
wire \Add1~7 ;
wire \Add1~9 ;
wire \Add1~11 ;
wire \Add1~12_combout ;
wire \CMP[0]~8 ;
wire \CMP[1]~9_combout ;
wire \Min[1]~input_o ;
wire \CMP[1]~reg0_q ;
wire \CMP[1]~10 ;
wire \CMP[2]~11_combout ;
wire \Min[2]~input_o ;
wire \CMP[2]~reg0_q ;
wire \CMP[2]~12 ;
wire \CMP[3]~13_combout ;
wire \Min[3]~input_o ;
wire \CMP[3]~reg0_q ;
wire \CMP[3]~14 ;
wire \CMP[4]~15_combout ;
wire \Min[4]~input_o ;
wire \CMP[4]~reg0_q ;
wire \CMP[4]~16 ;
wire \CMP[5]~17_combout ;
wire \Min[5]~input_o ;
wire \CMP[5]~reg0_q ;
wire \CMP[5]~18 ;
wire \CMP[6]~19_combout ;
wire \Min[6]~input_o ;
wire \CMP[6]~reg0_q ;
wire \Add1~10_combout ;
wire \Add1~8_combout ;
wire \Add1~6_combout ;
wire \Add1~4_combout ;
wire \Add1~2_combout ;
wire \Add1~0_combout ;
wire \LessThan0~1_cout ;
wire \LessThan0~3_cout ;
wire \LessThan0~5_cout ;
wire \LessThan0~7_cout ;
wire \LessThan0~9_cout ;
wire \LessThan0~11_cout ;
wire \LessThan0~12_combout ;
wire \Add1~13 ;
wire \Add1~14_combout ;
wire \LessThan0~14_combout ;
wire \CMP[0]~reg0_q ;


cycloneive_io_obuf \CMP[0]~output (
	.i(\CMP[0]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\CMP[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \CMP[0]~output .bus_hold = "false";
defparam \CMP[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \CMP[1]~output (
	.i(\CMP[1]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\CMP[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \CMP[1]~output .bus_hold = "false";
defparam \CMP[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \CMP[2]~output (
	.i(\CMP[2]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\CMP[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \CMP[2]~output .bus_hold = "false";
defparam \CMP[2]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \CMP[3]~output (
	.i(\CMP[3]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\CMP[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \CMP[3]~output .bus_hold = "false";
defparam \CMP[3]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \CMP[4]~output (
	.i(\CMP[4]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\CMP[4]~output_o ),
	.obar());
// synopsys translate_off
defparam \CMP[4]~output .bus_hold = "false";
defparam \CMP[4]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \CMP[5]~output (
	.i(\CMP[5]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\CMP[5]~output_o ),
	.obar());
// synopsys translate_off
defparam \CMP[5]~output .bus_hold = "false";
defparam \CMP[5]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \CMP[6]~output (
	.i(\CMP[6]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\CMP[6]~output_o ),
	.obar());
// synopsys translate_off
defparam \CMP[6]~output .bus_hold = "false";
defparam \CMP[6]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_ibuf \Clk~input (
	.i(Clk),
	.ibar(gnd),
	.o(\Clk~input_o ));
// synopsys translate_off
defparam \Clk~input .bus_hold = "false";
defparam \Clk~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \CMP[0]~7 (
// Equation(s):
// \CMP[0]~7_combout  = \CMP[0]~reg0_q  $ (VCC)
// \CMP[0]~8  = CARRY(\CMP[0]~reg0_q )

	.dataa(\CMP[0]~reg0_q ),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(gnd),
	.combout(\CMP[0]~7_combout ),
	.cout(\CMP[0]~8 ));
// synopsys translate_off
defparam \CMP[0]~7 .lut_mask = 16'h55AA;
defparam \CMP[0]~7 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_io_ibuf \Min[0]~input (
	.i(Min[0]),
	.ibar(gnd),
	.o(\Min[0]~input_o ));
// synopsys translate_off
defparam \Min[0]~input .bus_hold = "false";
defparam \Min[0]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \Max[6]~input (
	.i(Max[6]),
	.ibar(gnd),
	.o(\Max[6]~input_o ));
// synopsys translate_off
defparam \Max[6]~input .bus_hold = "false";
defparam \Max[6]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \Max[5]~input (
	.i(Max[5]),
	.ibar(gnd),
	.o(\Max[5]~input_o ));
// synopsys translate_off
defparam \Max[5]~input .bus_hold = "false";
defparam \Max[5]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \Max[4]~input (
	.i(Max[4]),
	.ibar(gnd),
	.o(\Max[4]~input_o ));
// synopsys translate_off
defparam \Max[4]~input .bus_hold = "false";
defparam \Max[4]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \Max[3]~input (
	.i(Max[3]),
	.ibar(gnd),
	.o(\Max[3]~input_o ));
// synopsys translate_off
defparam \Max[3]~input .bus_hold = "false";
defparam \Max[3]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \Max[2]~input (
	.i(Max[2]),
	.ibar(gnd),
	.o(\Max[2]~input_o ));
// synopsys translate_off
defparam \Max[2]~input .bus_hold = "false";
defparam \Max[2]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \Max[1]~input (
	.i(Max[1]),
	.ibar(gnd),
	.o(\Max[1]~input_o ));
// synopsys translate_off
defparam \Max[1]~input .bus_hold = "false";
defparam \Max[1]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \Max[0]~input (
	.i(Max[0]),
	.ibar(gnd),
	.o(\Max[0]~input_o ));
// synopsys translate_off
defparam \Max[0]~input .bus_hold = "false";
defparam \Max[0]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \Add1~0 (
// Equation(s):
// \Add1~0_combout  = \Max[0]~input_o  $ (VCC)
// \Add1~1  = CARRY(\Max[0]~input_o )

	.dataa(\Max[0]~input_o ),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(gnd),
	.combout(\Add1~0_combout ),
	.cout(\Add1~1 ));
// synopsys translate_off
defparam \Add1~0 .lut_mask = 16'h55AA;
defparam \Add1~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \Add1~2 (
// Equation(s):
// \Add1~2_combout  = (\Max[1]~input_o  & (\Add1~1  & VCC)) # (!\Max[1]~input_o  & (!\Add1~1 ))
// \Add1~3  = CARRY((!\Max[1]~input_o  & !\Add1~1 ))

	.dataa(\Max[1]~input_o ),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\Add1~1 ),
	.combout(\Add1~2_combout ),
	.cout(\Add1~3 ));
// synopsys translate_off
defparam \Add1~2 .lut_mask = 16'hA505;
defparam \Add1~2 .sum_lutc_input = "cin";
// synopsys translate_on

cycloneive_lcell_comb \Add1~4 (
// Equation(s):
// \Add1~4_combout  = (\Max[2]~input_o  & ((GND) # (!\Add1~3 ))) # (!\Max[2]~input_o  & (\Add1~3  $ (GND)))
// \Add1~5  = CARRY((\Max[2]~input_o ) # (!\Add1~3 ))

	.dataa(\Max[2]~input_o ),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\Add1~3 ),
	.combout(\Add1~4_combout ),
	.cout(\Add1~5 ));
// synopsys translate_off
defparam \Add1~4 .lut_mask = 16'h5AAF;
defparam \Add1~4 .sum_lutc_input = "cin";
// synopsys translate_on

cycloneive_lcell_comb \Add1~6 (
// Equation(s):
// \Add1~6_combout  = (\Max[3]~input_o  & (\Add1~5  & VCC)) # (!\Max[3]~input_o  & (!\Add1~5 ))
// \Add1~7  = CARRY((!\Max[3]~input_o  & !\Add1~5 ))

	.dataa(\Max[3]~input_o ),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\Add1~5 ),
	.combout(\Add1~6_combout ),
	.cout(\Add1~7 ));
// synopsys translate_off
defparam \Add1~6 .lut_mask = 16'hA505;
defparam \Add1~6 .sum_lutc_input = "cin";
// synopsys translate_on

cycloneive_lcell_comb \Add1~8 (
// Equation(s):
// \Add1~8_combout  = (\Max[4]~input_o  & ((GND) # (!\Add1~7 ))) # (!\Max[4]~input_o  & (\Add1~7  $ (GND)))
// \Add1~9  = CARRY((\Max[4]~input_o ) # (!\Add1~7 ))

	.dataa(\Max[4]~input_o ),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\Add1~7 ),
	.combout(\Add1~8_combout ),
	.cout(\Add1~9 ));
// synopsys translate_off
defparam \Add1~8 .lut_mask = 16'h5AAF;
defparam \Add1~8 .sum_lutc_input = "cin";
// synopsys translate_on

cycloneive_lcell_comb \Add1~10 (
// Equation(s):
// \Add1~10_combout  = (\Max[5]~input_o  & (\Add1~9  & VCC)) # (!\Max[5]~input_o  & (!\Add1~9 ))
// \Add1~11  = CARRY((!\Max[5]~input_o  & !\Add1~9 ))

	.dataa(\Max[5]~input_o ),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\Add1~9 ),
	.combout(\Add1~10_combout ),
	.cout(\Add1~11 ));
// synopsys translate_off
defparam \Add1~10 .lut_mask = 16'hA505;
defparam \Add1~10 .sum_lutc_input = "cin";
// synopsys translate_on

cycloneive_lcell_comb \Add1~12 (
// Equation(s):
// \Add1~12_combout  = (\Max[6]~input_o  & ((GND) # (!\Add1~11 ))) # (!\Max[6]~input_o  & (\Add1~11  $ (GND)))
// \Add1~13  = CARRY((\Max[6]~input_o ) # (!\Add1~11 ))

	.dataa(\Max[6]~input_o ),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\Add1~11 ),
	.combout(\Add1~12_combout ),
	.cout(\Add1~13 ));
// synopsys translate_off
defparam \Add1~12 .lut_mask = 16'h5AAF;
defparam \Add1~12 .sum_lutc_input = "cin";
// synopsys translate_on

cycloneive_lcell_comb \CMP[1]~9 (
// Equation(s):
// \CMP[1]~9_combout  = (\CMP[1]~reg0_q  & (!\CMP[0]~8 )) # (!\CMP[1]~reg0_q  & ((\CMP[0]~8 ) # (GND)))
// \CMP[1]~10  = CARRY((!\CMP[0]~8 ) # (!\CMP[1]~reg0_q ))

	.dataa(\CMP[1]~reg0_q ),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\CMP[0]~8 ),
	.combout(\CMP[1]~9_combout ),
	.cout(\CMP[1]~10 ));
// synopsys translate_off
defparam \CMP[1]~9 .lut_mask = 16'h5A5F;
defparam \CMP[1]~9 .sum_lutc_input = "cin";
// synopsys translate_on

cycloneive_io_ibuf \Min[1]~input (
	.i(Min[1]),
	.ibar(gnd),
	.o(\Min[1]~input_o ));
// synopsys translate_off
defparam \Min[1]~input .bus_hold = "false";
defparam \Min[1]~input .simulate_z_as = "z";
// synopsys translate_on

dffeas \CMP[1]~reg0 (
	.clk(!\Clk~input_o ),
	.d(\CMP[1]~9_combout ),
	.asdata(\Min[1]~input_o ),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(\LessThan0~14_combout ),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\CMP[1]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \CMP[1]~reg0 .is_wysiwyg = "true";
defparam \CMP[1]~reg0 .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \CMP[2]~11 (
// Equation(s):
// \CMP[2]~11_combout  = (\CMP[2]~reg0_q  & (\CMP[1]~10  $ (GND))) # (!\CMP[2]~reg0_q  & (!\CMP[1]~10  & VCC))
// \CMP[2]~12  = CARRY((\CMP[2]~reg0_q  & !\CMP[1]~10 ))

	.dataa(\CMP[2]~reg0_q ),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\CMP[1]~10 ),
	.combout(\CMP[2]~11_combout ),
	.cout(\CMP[2]~12 ));
// synopsys translate_off
defparam \CMP[2]~11 .lut_mask = 16'hA50A;
defparam \CMP[2]~11 .sum_lutc_input = "cin";
// synopsys translate_on

cycloneive_io_ibuf \Min[2]~input (
	.i(Min[2]),
	.ibar(gnd),
	.o(\Min[2]~input_o ));
// synopsys translate_off
defparam \Min[2]~input .bus_hold = "false";
defparam \Min[2]~input .simulate_z_as = "z";
// synopsys translate_on

dffeas \CMP[2]~reg0 (
	.clk(!\Clk~input_o ),
	.d(\CMP[2]~11_combout ),
	.asdata(\Min[2]~input_o ),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(\LessThan0~14_combout ),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\CMP[2]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \CMP[2]~reg0 .is_wysiwyg = "true";
defparam \CMP[2]~reg0 .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \CMP[3]~13 (
// Equation(s):
// \CMP[3]~13_combout  = (\CMP[3]~reg0_q  & (!\CMP[2]~12 )) # (!\CMP[3]~reg0_q  & ((\CMP[2]~12 ) # (GND)))
// \CMP[3]~14  = CARRY((!\CMP[2]~12 ) # (!\CMP[3]~reg0_q ))

	.dataa(\CMP[3]~reg0_q ),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\CMP[2]~12 ),
	.combout(\CMP[3]~13_combout ),
	.cout(\CMP[3]~14 ));
// synopsys translate_off
defparam \CMP[3]~13 .lut_mask = 16'h5A5F;
defparam \CMP[3]~13 .sum_lutc_input = "cin";
// synopsys translate_on

cycloneive_io_ibuf \Min[3]~input (
	.i(Min[3]),
	.ibar(gnd),
	.o(\Min[3]~input_o ));
// synopsys translate_off
defparam \Min[3]~input .bus_hold = "false";
defparam \Min[3]~input .simulate_z_as = "z";
// synopsys translate_on

dffeas \CMP[3]~reg0 (
	.clk(!\Clk~input_o ),
	.d(\CMP[3]~13_combout ),
	.asdata(\Min[3]~input_o ),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(\LessThan0~14_combout ),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\CMP[3]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \CMP[3]~reg0 .is_wysiwyg = "true";
defparam \CMP[3]~reg0 .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \CMP[4]~15 (
// Equation(s):
// \CMP[4]~15_combout  = (\CMP[4]~reg0_q  & (\CMP[3]~14  $ (GND))) # (!\CMP[4]~reg0_q  & (!\CMP[3]~14  & VCC))
// \CMP[4]~16  = CARRY((\CMP[4]~reg0_q  & !\CMP[3]~14 ))

	.dataa(\CMP[4]~reg0_q ),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\CMP[3]~14 ),
	.combout(\CMP[4]~15_combout ),
	.cout(\CMP[4]~16 ));
// synopsys translate_off
defparam \CMP[4]~15 .lut_mask = 16'hA50A;
defparam \CMP[4]~15 .sum_lutc_input = "cin";
// synopsys translate_on

cycloneive_io_ibuf \Min[4]~input (
	.i(Min[4]),
	.ibar(gnd),
	.o(\Min[4]~input_o ));
// synopsys translate_off
defparam \Min[4]~input .bus_hold = "false";
defparam \Min[4]~input .simulate_z_as = "z";
// synopsys translate_on

dffeas \CMP[4]~reg0 (
	.clk(!\Clk~input_o ),
	.d(\CMP[4]~15_combout ),
	.asdata(\Min[4]~input_o ),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(\LessThan0~14_combout ),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\CMP[4]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \CMP[4]~reg0 .is_wysiwyg = "true";
defparam \CMP[4]~reg0 .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \CMP[5]~17 (
// Equation(s):
// \CMP[5]~17_combout  = (\CMP[5]~reg0_q  & (!\CMP[4]~16 )) # (!\CMP[5]~reg0_q  & ((\CMP[4]~16 ) # (GND)))
// \CMP[5]~18  = CARRY((!\CMP[4]~16 ) # (!\CMP[5]~reg0_q ))

	.dataa(\CMP[5]~reg0_q ),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\CMP[4]~16 ),
	.combout(\CMP[5]~17_combout ),
	.cout(\CMP[5]~18 ));
// synopsys translate_off
defparam \CMP[5]~17 .lut_mask = 16'h5A5F;
defparam \CMP[5]~17 .sum_lutc_input = "cin";
// synopsys translate_on

cycloneive_io_ibuf \Min[5]~input (
	.i(Min[5]),
	.ibar(gnd),
	.o(\Min[5]~input_o ));
// synopsys translate_off
defparam \Min[5]~input .bus_hold = "false";
defparam \Min[5]~input .simulate_z_as = "z";
// synopsys translate_on

dffeas \CMP[5]~reg0 (
	.clk(!\Clk~input_o ),
	.d(\CMP[5]~17_combout ),
	.asdata(\Min[5]~input_o ),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(\LessThan0~14_combout ),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\CMP[5]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \CMP[5]~reg0 .is_wysiwyg = "true";
defparam \CMP[5]~reg0 .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \CMP[6]~19 (
// Equation(s):
// \CMP[6]~19_combout  = \CMP[6]~reg0_q  $ (!\CMP[5]~18 )

	.dataa(\CMP[6]~reg0_q ),
	.datab(gnd),
	.datac(gnd),
	.datad(gnd),
	.cin(\CMP[5]~18 ),
	.combout(\CMP[6]~19_combout ),
	.cout());
// synopsys translate_off
defparam \CMP[6]~19 .lut_mask = 16'hA5A5;
defparam \CMP[6]~19 .sum_lutc_input = "cin";
// synopsys translate_on

cycloneive_io_ibuf \Min[6]~input (
	.i(Min[6]),
	.ibar(gnd),
	.o(\Min[6]~input_o ));
// synopsys translate_off
defparam \Min[6]~input .bus_hold = "false";
defparam \Min[6]~input .simulate_z_as = "z";
// synopsys translate_on

dffeas \CMP[6]~reg0 (
	.clk(!\Clk~input_o ),
	.d(\CMP[6]~19_combout ),
	.asdata(\Min[6]~input_o ),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(\LessThan0~14_combout ),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\CMP[6]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \CMP[6]~reg0 .is_wysiwyg = "true";
defparam \CMP[6]~reg0 .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \LessThan0~1 (
// Equation(s):
// \LessThan0~1_cout  = CARRY((!\Add1~0_combout  & \CMP[0]~reg0_q ))

	.dataa(\Add1~0_combout ),
	.datab(\CMP[0]~reg0_q ),
	.datac(gnd),
	.datad(vcc),
	.cin(gnd),
	.combout(),
	.cout(\LessThan0~1_cout ));
// synopsys translate_off
defparam \LessThan0~1 .lut_mask = 16'h0044;
defparam \LessThan0~1 .sum_lutc_input = "cin";
// synopsys translate_on

cycloneive_lcell_comb \LessThan0~3 (
// Equation(s):
// \LessThan0~3_cout  = CARRY((\Add1~2_combout  & ((!\LessThan0~1_cout ) # (!\CMP[1]~reg0_q ))) # (!\Add1~2_combout  & (!\CMP[1]~reg0_q  & !\LessThan0~1_cout )))

	.dataa(\Add1~2_combout ),
	.datab(\CMP[1]~reg0_q ),
	.datac(gnd),
	.datad(vcc),
	.cin(\LessThan0~1_cout ),
	.combout(),
	.cout(\LessThan0~3_cout ));
// synopsys translate_off
defparam \LessThan0~3 .lut_mask = 16'h002B;
defparam \LessThan0~3 .sum_lutc_input = "cin";
// synopsys translate_on

cycloneive_lcell_comb \LessThan0~5 (
// Equation(s):
// \LessThan0~5_cout  = CARRY((\Add1~4_combout  & (\CMP[2]~reg0_q  & !\LessThan0~3_cout )) # (!\Add1~4_combout  & ((\CMP[2]~reg0_q ) # (!\LessThan0~3_cout ))))

	.dataa(\Add1~4_combout ),
	.datab(\CMP[2]~reg0_q ),
	.datac(gnd),
	.datad(vcc),
	.cin(\LessThan0~3_cout ),
	.combout(),
	.cout(\LessThan0~5_cout ));
// synopsys translate_off
defparam \LessThan0~5 .lut_mask = 16'h004D;
defparam \LessThan0~5 .sum_lutc_input = "cin";
// synopsys translate_on

cycloneive_lcell_comb \LessThan0~7 (
// Equation(s):
// \LessThan0~7_cout  = CARRY((\Add1~6_combout  & ((!\LessThan0~5_cout ) # (!\CMP[3]~reg0_q ))) # (!\Add1~6_combout  & (!\CMP[3]~reg0_q  & !\LessThan0~5_cout )))

	.dataa(\Add1~6_combout ),
	.datab(\CMP[3]~reg0_q ),
	.datac(gnd),
	.datad(vcc),
	.cin(\LessThan0~5_cout ),
	.combout(),
	.cout(\LessThan0~7_cout ));
// synopsys translate_off
defparam \LessThan0~7 .lut_mask = 16'h002B;
defparam \LessThan0~7 .sum_lutc_input = "cin";
// synopsys translate_on

cycloneive_lcell_comb \LessThan0~9 (
// Equation(s):
// \LessThan0~9_cout  = CARRY((\Add1~8_combout  & (\CMP[4]~reg0_q  & !\LessThan0~7_cout )) # (!\Add1~8_combout  & ((\CMP[4]~reg0_q ) # (!\LessThan0~7_cout ))))

	.dataa(\Add1~8_combout ),
	.datab(\CMP[4]~reg0_q ),
	.datac(gnd),
	.datad(vcc),
	.cin(\LessThan0~7_cout ),
	.combout(),
	.cout(\LessThan0~9_cout ));
// synopsys translate_off
defparam \LessThan0~9 .lut_mask = 16'h004D;
defparam \LessThan0~9 .sum_lutc_input = "cin";
// synopsys translate_on

cycloneive_lcell_comb \LessThan0~11 (
// Equation(s):
// \LessThan0~11_cout  = CARRY((\Add1~10_combout  & ((!\LessThan0~9_cout ) # (!\CMP[5]~reg0_q ))) # (!\Add1~10_combout  & (!\CMP[5]~reg0_q  & !\LessThan0~9_cout )))

	.dataa(\Add1~10_combout ),
	.datab(\CMP[5]~reg0_q ),
	.datac(gnd),
	.datad(vcc),
	.cin(\LessThan0~9_cout ),
	.combout(),
	.cout(\LessThan0~11_cout ));
// synopsys translate_off
defparam \LessThan0~11 .lut_mask = 16'h002B;
defparam \LessThan0~11 .sum_lutc_input = "cin";
// synopsys translate_on

cycloneive_lcell_comb \LessThan0~12 (
// Equation(s):
// \LessThan0~12_combout  = (\Add1~12_combout  & (\CMP[6]~reg0_q  & !\LessThan0~11_cout )) # (!\Add1~12_combout  & ((\CMP[6]~reg0_q ) # (!\LessThan0~11_cout )))

	.dataa(\Add1~12_combout ),
	.datab(\CMP[6]~reg0_q ),
	.datac(gnd),
	.datad(gnd),
	.cin(\LessThan0~11_cout ),
	.combout(\LessThan0~12_combout ),
	.cout());
// synopsys translate_off
defparam \LessThan0~12 .lut_mask = 16'h4D4D;
defparam \LessThan0~12 .sum_lutc_input = "cin";
// synopsys translate_on

cycloneive_lcell_comb \Add1~14 (
// Equation(s):
// \Add1~14_combout  = !\Add1~13 

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(gnd),
	.cin(\Add1~13 ),
	.combout(\Add1~14_combout ),
	.cout());
// synopsys translate_off
defparam \Add1~14 .lut_mask = 16'h0F0F;
defparam \Add1~14 .sum_lutc_input = "cin";
// synopsys translate_on

cycloneive_lcell_comb \LessThan0~14 (
// Equation(s):
// \LessThan0~14_combout  = (\LessThan0~12_combout  & !\Add1~14_combout )

	.dataa(\LessThan0~12_combout ),
	.datab(gnd),
	.datac(gnd),
	.datad(\Add1~14_combout ),
	.cin(gnd),
	.combout(\LessThan0~14_combout ),
	.cout());
// synopsys translate_off
defparam \LessThan0~14 .lut_mask = 16'h00AA;
defparam \LessThan0~14 .sum_lutc_input = "datac";
// synopsys translate_on

dffeas \CMP[0]~reg0 (
	.clk(!\Clk~input_o ),
	.d(\CMP[0]~7_combout ),
	.asdata(\Min[0]~input_o ),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(\LessThan0~14_combout ),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\CMP[0]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \CMP[0]~reg0 .is_wysiwyg = "true";
defparam \CMP[0]~reg0 .power_up = "low";
// synopsys translate_on

assign CMP[0] = \CMP[0]~output_o ;

assign CMP[1] = \CMP[1]~output_o ;

assign CMP[2] = \CMP[2]~output_o ;

assign CMP[3] = \CMP[3]~output_o ;

assign CMP[4] = \CMP[4]~output_o ;

assign CMP[5] = \CMP[5]~output_o ;

assign CMP[6] = \CMP[6]~output_o ;

endmodule
