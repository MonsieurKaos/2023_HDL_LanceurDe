// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 17.1.0 Build 590 10/25/2017 SJ Lite Edition"

// DATE "10/19/2023 19:19:14"

// 
// Device: Altera EP4CE115F29C7 Package FBGA780
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module Trans_7seg (
	BinIn,
	SegOut);
input 	[3:0] BinIn;
output 	[0:6] SegOut;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \SegOut[6]~output_o ;
wire \SegOut[5]~output_o ;
wire \SegOut[4]~output_o ;
wire \SegOut[3]~output_o ;
wire \SegOut[2]~output_o ;
wire \SegOut[1]~output_o ;
wire \SegOut[0]~output_o ;
wire \BinIn[0]~input_o ;
wire \BinIn[1]~input_o ;
wire \BinIn[2]~input_o ;
wire \BinIn[3]~input_o ;
wire \WideOr6~0_combout ;
wire \WideOr5~0_combout ;
wire \WideOr4~0_combout ;
wire \WideOr3~0_combout ;
wire \WideOr2~0_combout ;
wire \WideOr1~0_combout ;
wire \WideOr0~0_combout ;


cycloneive_io_obuf \SegOut[6]~output (
	.i(!\WideOr6~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\SegOut[6]~output_o ),
	.obar());
// synopsys translate_off
defparam \SegOut[6]~output .bus_hold = "false";
defparam \SegOut[6]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \SegOut[5]~output (
	.i(!\WideOr5~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\SegOut[5]~output_o ),
	.obar());
// synopsys translate_off
defparam \SegOut[5]~output .bus_hold = "false";
defparam \SegOut[5]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \SegOut[4]~output (
	.i(!\WideOr4~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\SegOut[4]~output_o ),
	.obar());
// synopsys translate_off
defparam \SegOut[4]~output .bus_hold = "false";
defparam \SegOut[4]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \SegOut[3]~output (
	.i(!\WideOr3~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\SegOut[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \SegOut[3]~output .bus_hold = "false";
defparam \SegOut[3]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \SegOut[2]~output (
	.i(\WideOr2~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\SegOut[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \SegOut[2]~output .bus_hold = "false";
defparam \SegOut[2]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \SegOut[1]~output (
	.i(!\WideOr1~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\SegOut[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \SegOut[1]~output .bus_hold = "false";
defparam \SegOut[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \SegOut[0]~output (
	.i(!\WideOr0~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\SegOut[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \SegOut[0]~output .bus_hold = "false";
defparam \SegOut[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_ibuf \BinIn[0]~input (
	.i(BinIn[0]),
	.ibar(gnd),
	.o(\BinIn[0]~input_o ));
// synopsys translate_off
defparam \BinIn[0]~input .bus_hold = "false";
defparam \BinIn[0]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \BinIn[1]~input (
	.i(BinIn[1]),
	.ibar(gnd),
	.o(\BinIn[1]~input_o ));
// synopsys translate_off
defparam \BinIn[1]~input .bus_hold = "false";
defparam \BinIn[1]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \BinIn[2]~input (
	.i(BinIn[2]),
	.ibar(gnd),
	.o(\BinIn[2]~input_o ));
// synopsys translate_off
defparam \BinIn[2]~input .bus_hold = "false";
defparam \BinIn[2]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \BinIn[3]~input (
	.i(BinIn[3]),
	.ibar(gnd),
	.o(\BinIn[3]~input_o ));
// synopsys translate_off
defparam \BinIn[3]~input .bus_hold = "false";
defparam \BinIn[3]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \WideOr6~0 (
// Equation(s):
// \WideOr6~0_combout  = (\BinIn[1]~input_o  & ((\BinIn[0]~input_o  & (!\BinIn[2]~input_o )) # (!\BinIn[0]~input_o  & ((!\BinIn[3]~input_o ))))) # (!\BinIn[1]~input_o  & ((\BinIn[2]~input_o  $ (\BinIn[3]~input_o ))))

	.dataa(\BinIn[0]~input_o ),
	.datab(\BinIn[1]~input_o ),
	.datac(\BinIn[2]~input_o ),
	.datad(\BinIn[3]~input_o ),
	.cin(gnd),
	.combout(\WideOr6~0_combout ),
	.cout());
// synopsys translate_off
defparam \WideOr6~0 .lut_mask = 16'h0B7C;
defparam \WideOr6~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \WideOr5~0 (
// Equation(s):
// \WideOr5~0_combout  = (\BinIn[0]~input_o  & (!\BinIn[1]~input_o  & (\BinIn[2]~input_o  $ (\BinIn[3]~input_o )))) # (!\BinIn[0]~input_o  & ((\BinIn[2]~input_o  $ (\BinIn[3]~input_o ))))

	.dataa(\BinIn[0]~input_o ),
	.datab(\BinIn[1]~input_o ),
	.datac(\BinIn[2]~input_o ),
	.datad(\BinIn[3]~input_o ),
	.cin(gnd),
	.combout(\WideOr5~0_combout ),
	.cout());
// synopsys translate_off
defparam \WideOr5~0 .lut_mask = 16'h0770;
defparam \WideOr5~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \WideOr4~0 (
// Equation(s):
// \WideOr4~0_combout  = (!\BinIn[0]~input_o  & ((\BinIn[3]~input_o  & ((!\BinIn[2]~input_o ))) # (!\BinIn[3]~input_o  & (\BinIn[1]~input_o ))))

	.dataa(\BinIn[0]~input_o ),
	.datab(\BinIn[1]~input_o ),
	.datac(\BinIn[2]~input_o ),
	.datad(\BinIn[3]~input_o ),
	.cin(gnd),
	.combout(\WideOr4~0_combout ),
	.cout());
// synopsys translate_off
defparam \WideOr4~0 .lut_mask = 16'h0544;
defparam \WideOr4~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \WideOr3~0 (
// Equation(s):
// \WideOr3~0_combout  = (\BinIn[3]~input_o  & (((!\BinIn[2]~input_o )))) # (!\BinIn[3]~input_o  & (\BinIn[1]~input_o  $ (((\BinIn[0]~input_o  & \BinIn[2]~input_o )))))

	.dataa(\BinIn[0]~input_o ),
	.datab(\BinIn[1]~input_o ),
	.datac(\BinIn[2]~input_o ),
	.datad(\BinIn[3]~input_o ),
	.cin(gnd),
	.combout(\WideOr3~0_combout ),
	.cout());
// synopsys translate_off
defparam \WideOr3~0 .lut_mask = 16'h0F6C;
defparam \WideOr3~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \WideOr2~0 (
// Equation(s):
// \WideOr2~0_combout  = (\BinIn[2]~input_o  & (\BinIn[3]~input_o )) # (!\BinIn[2]~input_o  & (!\BinIn[3]~input_o  & !\BinIn[0]~input_o ))

	.dataa(\BinIn[2]~input_o ),
	.datab(\BinIn[3]~input_o ),
	.datac(gnd),
	.datad(\BinIn[0]~input_o ),
	.cin(gnd),
	.combout(\WideOr2~0_combout ),
	.cout());
// synopsys translate_off
defparam \WideOr2~0 .lut_mask = 16'h8899;
defparam \WideOr2~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \WideOr1~0 (
// Equation(s):
// \WideOr1~0_combout  = (\BinIn[0]~input_o  & (((\BinIn[1]~input_o  & !\BinIn[3]~input_o )) # (!\BinIn[2]~input_o ))) # (!\BinIn[0]~input_o  & (\BinIn[2]~input_o  $ (((\BinIn[1]~input_o ) # (\BinIn[3]~input_o )))))

	.dataa(\BinIn[0]~input_o ),
	.datab(\BinIn[1]~input_o ),
	.datac(\BinIn[2]~input_o ),
	.datad(\BinIn[3]~input_o ),
	.cin(gnd),
	.combout(\WideOr1~0_combout ),
	.cout());
// synopsys translate_off
defparam \WideOr1~0 .lut_mask = 16'h0F9E;
defparam \WideOr1~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \WideOr0~0 (
// Equation(s):
// \WideOr0~0_combout  = (\BinIn[3]~input_o  & (((!\BinIn[2]~input_o )))) # (!\BinIn[3]~input_o  & ((\BinIn[1]~input_o ) # ((\BinIn[0]~input_o  & \BinIn[2]~input_o ))))

	.dataa(\BinIn[0]~input_o ),
	.datab(\BinIn[1]~input_o ),
	.datac(\BinIn[2]~input_o ),
	.datad(\BinIn[3]~input_o ),
	.cin(gnd),
	.combout(\WideOr0~0_combout ),
	.cout());
// synopsys translate_off
defparam \WideOr0~0 .lut_mask = 16'h0FEC;
defparam \WideOr0~0 .sum_lutc_input = "datac";
// synopsys translate_on

assign SegOut[6] = \SegOut[6]~output_o ;

assign SegOut[5] = \SegOut[5]~output_o ;

assign SegOut[4] = \SegOut[4]~output_o ;

assign SegOut[3] = \SegOut[3]~output_o ;

assign SegOut[2] = \SegOut[2]~output_o ;

assign SegOut[1] = \SegOut[1]~output_o ;

assign SegOut[0] = \SegOut[0]~output_o ;

endmodule
