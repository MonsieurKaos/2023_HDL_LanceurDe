module Trans_Aff_CH(NB_Face, Id_Un, Id_Diz, Id_Cent, Id_d);

input[6:0] NB_Face;

output[3:0] Id_Un;
output[3:0] Id_Diz;
output[3:0] Id_Cent;
output[3:0] Id_d;

reg[3:0] Id_Un;
reg[3:0] Id_Diz
reg[3:0] Id_Cent;
reg[3:0] Id_d;

always@(NB_Face)
	Id_d <= 11;
	begin
		case (Nb_Face)
			
				case 4:  Id_Un   <= 4;
						   Id_Diz  <= 10;
                     Id_Cent <= 10;
						  
				case 6:  Id_Un   <= 6;
						   Id_Diz  <= 10;
                     Id_Cent <= 10;
						  
				case 8:  Id_Un   <= 8;
						   Id_Diz  <= 10;
                     Id_Cent <= 10;
						  
				case 10: Id_Un   <= 1;
						   Id_Diz  <= 0;
                     Id_Cent <= 10;
						  
				case 12: Id_Un   <= 2;
						   Id_Diz  <= 1;
                     Id_Cent <= 10;
						  
				case 20: Id_Un   <= 0;
						   Id_Diz  <= 2;
                     Id_Cent <= 10;
						  
				case 30: Id_Un   <= 0;
						   Id_Diz  <= 3;
                     Id_Cent <= 10;
				 
				case 100: Id_Un  <= 0;
						   Id_Diz  <= 0;
                     Id_Cent <= 1;

				default: Id_Un   <= 4;
						   Id_Diz  <= 10;
                     Id_Cent <= 10;
		endcase
	end

endmodule